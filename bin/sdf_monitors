#! /bin/bash

# log output to a file
# logfile=$HOME/.local/share/sdf/sdf_monitors.log
# exec > $logfile 2>&1

internal_monitor=`xrandr -q | grep -P '\bcon' | cut -d ' ' -f 1 | grep -P '^eDP'`

active_displayport_monitor=`xrandr -q | grep -P '\bcon' | cut -d ' ' -f 1 | grep -P '^DP'`
active_hdmi_monitor=`xrandr -q | grep -P '\bcon' | cut -d ' ' -f 1 | grep -P '^HDMI'`
inactive_monitors=`xrandr -q | grep -P '\bdiscon' | cut -d ' ' -f 1`
external_monitor_connected=`xrandr -q | grep -P '\b'$active_displayport_monitor' connected' | wc -l`
hdmi_monitor_connected=`xrandr -q | grep -P '\b'$active_hdmi_monitor' connected' | wc -l`
if [ "$active_displayport_monitor" == "" ] ; then
  external_monitor_connected=0
fi
if [ "$active_hdmi_monitor" == "" ] ; then
  hdmi_monitor_connected=0
fi

echo "Internal monitor: $internal_monitor"
echo "External monitor: $active_displayport_monitor"
echo "  connected: $external_monitor_connected"
echo "HDMI monitor: $active_hdmi_monitor"
echo "  connected: $hdmi_monitor_connected"

action="$1"

if [ "$action" == "" ]; then
  action="external"
fi

if [ $hdmi_monitor_connected -eq 1 ]; then
  hdmi_command="--output $active_hdmi_monitor --off"
fi

if [ "$action" == "internal" ] ; then
  turn_off_all_others=""
  for m in `xrandr --listmonitors  | tail -n +3 | awk '{print $2}' | sed 's/^[^a-zA-Z]//'`; do
    turn_off_all_others="$turn_off_all_others --output $m --off"
  done
  xrandr --output $internal_monitor --auto $turn_off_all_others
elif [ "$action" == "external" ] ; then
  xrandr --output $active_displayport_monitor --auto --mode 3840x2160 --output $internal_monitor --off $hdmi_command
elif [ "$action" == "auto" ] ; then
  # auto magic mode

  for i in $inactive_monitors; do
    disable_command="$disable_command --output $i --off"
  done

  if [ $external_monitor_connected -eq 1 ]; then
    external_command="--output $active_displayport_monitor --auto --mode 3840x2160 --pos 0x-2561"
  fi

  if [ $hdmi_monitor_connected -eq 1 ]; then
    hdmi_command="--output $active_hdmi_monitor --auto --rotate normal"
    if [ $external_monitor_connected -eq 1 ]; then
      hdmi_command="$hdmi_command --right-of $active_displayport_monitor"
    else
      hdmi_command="$hdmi_command --right-of $internal_monitor"
    fi
  fi

  echo xrandr --output $internal_monitor --pos 0x0 $external_command $hdmi_command $disable_command
  xrandr --output $internal_monitor --pos 0x0 $external_command $hdmi_command $disable_command
fi

sdf_polybar
sdf_bspwm_desktops
